{% extends 'base.html.twig' %}

{% block title %}Chat avec {{ receiver.fullName }}{% endblock %}

{% block body %}
    <h1>Chat avec {{ receiver.fullName }} </h1> 

    <div class="card " id="chat-messages">
        {% for message in messages %}
            {% if app.user.id == message.sender.id %}
                <div class="alert alert-success">
                    <h6>{{ message.sender.fullName }}</h6> 
                    <p>{{ message.content }}</p>
                    <span>{{ message.createdAt|date('H:i:s') }}</span>
                </div>
            {% else %}
                <div class="alert alert-secondary">
                    <h3>{{ message.sender.fullName }}</h3> 
                    <p>{{ message.content }}</p>
                    <span>{{ message.createdAt|date('H:i:s') }}</span>
                </div>

            {% endif %}
            
            
            
        
        {% endfor %}
        </p>
    </div>
    
    {{ form_start(form) }}
        {{ form_widget(form) }}
        <button type="submit" class="btn btn-primary">Envoyer</button>

    {{ form_end(form) }}

        <script>
        // Vérifier si nous sommes en mode local (file://)
        if (window.location.protocol !== 'file:') {
            // Code de polling existant
            setInterval(() => {
                fetch("{{ path('chat_index', {'receiverId': receiver.id}) }}", {
                    method: 'GET',
                    headers: {
                        'Accept': 'text/html',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur réseau : ' + response.status);
                    }
                    return response.text();
                })
                .then(html => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');
                    const messages = doc.getElementById('chat-messages');
                    if (messages) {
                        document.getElementById('chat-messages').innerHTML = messages.innerHTML;
                    }
                })
                .catch(error => {
                    console.error('Erreur lors du polling :', error);
                    // Optionnel : Afficher un message à l'utilisateur
                    document.getElementById('chat-messages').innerHTML +=
                        '<div style="color: red;">Erreur de chargement des messages. Veuillez réessayer.</div>';
                });œ
            }, 1000);
        } else {
            console.log("Mode local détecté - polling désactivé pour éviter les erreurs CORS");
            // Ajouter un message pour indiquer que le polling est désactivé en mode local
            document.addEventListener('DOMContentLoaded', function() {
                if (document.getElementById('chat-messages')) {
                    document.getElementById('chat-messages').innerHTML += 
                        '<div style="color: blue; padding: 10px; background-color: #f0f0f0; margin-top: 10px; border-radius: 5px;">' +
                        '<strong>Note:</strong> Le polling des messages est désactivé en mode local. ' +
                        'Pour une expérience complète, veuillez servir cette page via un serveur web.' +
                        '</div>';
                }
            });
        }
        </script>    
        
    
{% endblock %}